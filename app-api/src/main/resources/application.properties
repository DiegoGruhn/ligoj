server.port            = 8081
server.context-path    = /ligoj-api
spring.application.name= Ligoj API
security.sessions      = stateless
management.context-path=/manage
management.security.roles=USER
# API server has no security check for client source
# This is a backend web server, and must not be accessed by something else than the WEB nodes.
server.address         = 127.0.0.1

# Database update mode : update, create, none
# To handle correctly the version update and auto install of plugins, should be "update"
# If you want to save some startup time without database update, use "none"
jpa.hbm2ddl            = ${database.app.hbm2ddl:update}

# Dialect used to connect to the database
# Can be : org.ligoj.bootstrap.core.dao.MySQL5InnoDBUtf8Dialect, org.hibernate.dialect.PostgreSQL95Dialect, org.hibernate.dialect.Oracle12cDialect
jpa.dialect            = org.ligoj.bootstrap.core.dao.MySQL5InnoDBUtf8Dialect

# Database credentials and connection inputs
jpa.database           = ${database.app:ligoj}
jdbc.username          = ${database.app.user:ligoj}
jdbc.password          = ${database.app.password:ligoj}
jdbc.driverClassName   = com.mysql.cj.jdbc.Driver
jdbc.url               = jdbc:mysql://localhost:3306/${jpa.database}?useColumnNamesInFindColumn=true&useUnicode=yes&characterEncoding=UTF-8&autoReconnect=true&maxReconnects=10&useLegacyDatetimeCode=false&serverTimezone=UTC
jdbc.validationQuery   = select 1;
jdbc.maxIdleTime       = 180000
jdbc.maxPoolSize       = 150

# Node health CRON expression
health.node            = 0 0 0/1 1/1 * ?

# Subscription health CRON expression
health.subscription    = 0 0 2 1/1 * ?

# Security key file for secured data from properties and database
app.crypto.file        = src/test/resources/security.key